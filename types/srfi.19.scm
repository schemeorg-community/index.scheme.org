(((name . "time-duration") (signature value time-type))
 ((name . "time-monotonic") (signature value time-type))
 ((name . "time-process") (signature value time-type))
 ((name . "time-tai") (signature value time-type))
 ((name . "time-thread") (signature value time-type))
 ((name . "time-utc") (signature value time-type))
 ((name . "current-date") (signature lambda () date?))
 ((name . "current-date") (signature lambda ((integer? tz-offset)) date?))
 ((name . "current-julian-day") (signature lambda () real?))
 ((name . "current-modified-julian-day") (signature lambda () real?))
 ((name . "current-time") (signature lambda () time?))
 ((name . "current-time") (signature lambda ((time-type type)) time?))
 ((name . "time-resolution") (signature lambda () integer?))
 ((name . "time-resolution") (signature lambda ((time-type type)) integer?))
 ((name . "make-time")
  (signature
   lambda
   ((time-type type) (integer? nanosecond) (integer? second))
   time?)
  (tags pure))
 ((name . "time?") (signature lambda (obj) boolean?) (tags pure predicate))
 ((name . "time-type") (signature lambda ((time? time)) time-type) (tags pure))
 ((name . "time-nanosecond")
  (signature lambda ((time? time)) integer?)
  (tags pure))
 ((name . "time-second")
  (signature lambda ((time? time)) integer?)
  (tags pure))
 ((name . "set-time-type!")
  (signature lambda ((time? time) (time-type time-type)) undefined))
 ((name . "set-time-nanosecond!")
  (signature lambda ((time? time) (integer? nanosecond)) undefined))
 ((name . "set-time-second!")
  (signature lambda ((time? time) (integer? second)) undefined))
 ((name . "copy-time") (signature lambda ((time? time)) time?) (tags pure))
 ((name . "time<=?")
  (signature lambda ((time? time1) (time? time2)) boolean?)
  (tags pure))
 ((name . "time<?")
  (signature lambda ((time? time1) (time? time2)) boolean?)
  (tags pure))
 ((name . "time=?")
  (signature lambda ((time? time1) (time? time2)) boolean?)
  (tags pure))
 ((name . "time>=?")
  (signature lambda ((time? time1) (time? time2)) boolean?)
  (tags pure))
 ((name . "time>?")
  (signature lambda ((time? time1) (time? time2)) boolean?)
  (tags pure))
 ((name . "time-difference")
  (signature lambda ((time? time1) (time? time2)) time?)
  (tags pure))
 ((name . "time-difference!")
  (signature lambda ((time? time1) (time? time2)) time?))
 ((name . "add-duration")
  (signature lambda ((time? time1) (time? time-duration)) time?)
  (tags pure))
 ((name . "add-duration!")
  (signature lambda ((time? time1) (time? time-duration)) time?))
 ((name . "subtract-duration")
  (signature lambda ((time? time1) (time? time-duration)) time?)
  (tags pure))
 ((name . "subtract-duration!")
  (signature lambda ((time? time1) (time? time-duration)) time?))
 ((name . "make-date")
  (signature
   lambda
   ((integer? nanosecond)
    (integer? second)
    (integer? minute)
    (integer? hour)
    (integer? day)
    (integer? month)
    (integer? year)
    (integer? zone-offset))
   date?)
  (tags pure))
 ((name . "date?") (signature lambda (obj) boolean?) (tags pure predicate))
 ((name . "date-nanosecond")
  (signature lambda ((date? date)) integer?)
  (tags pure))
 ((name . "date-second")
  (signature lambda ((date? date)) integer?)
  (tags pure))
 ((name . "date-minute")
  (signature lambda ((date? date)) integer?)
  (tags pure))
 ((name . "date-hour") (signature lambda ((date? date)) integer?) (tags pure))
 ((name . "date-day") (signature lambda ((date? date)) integer?) (tags pure))
 ((name . "date-month") (signature lambda ((date? date)) integer?) (tags pure))
 ((name . "date-year") (signature lambda ((date? date)) integer?) (tags pure))
 ((name . "date-zone-offset")
  (signature lambda ((date? date)) integer?)
  (tags pure))
 ((name . "date-year-day")
  (signature lambda ((date? date)) integer?)
  (tags pure))
 ((name . "date-week-day")
  (signature lambda ((date? date)) integer?)
  (tags pure))
 ((name . "date-week-number")
  (signature
   lambda
   ((date? date) (integer? day-of-week-starting-week))
   integer?)
  (tags pure))
 ((name . "date->julian-day")
  (signature lambda ((date? date)) real?)
  (tags pure))
 ((name . "date->modified-julian-day")
  (signature lambda ((date? date)) real?)
  (tags pure))
 ((name . "date->time-monotonic")
  (signature lambda ((date? date)) time?)
  (tags pure))
 ((name . "date->time-tai")
  (signature lambda ((date? date)) time?)
  (tags pure))
 ((name . "date->time-utc")
  (signature lambda ((date? date)) time?)
  (tags pure))
 ((name . "julian-day->date") (signature lambda ((real? jd)) date?))
 ((name . "julian-day->date")
  (signature lambda ((real? jd) (integer? tz-offset)) date?)
  (tags pure))
 ((name . "julian-day->time-monotonic")
  (signature lambda ((real? jd)) time?)
  (tags pure))
 ((name . "julian-day->time-tai")
  (signature lambda ((real? jd)) time?)
  (tags pure))
 ((name . "julian-day->time-utc")
  (signature lambda ((real? jd)) time?)
  (tags pure))
 ((name . "modified-julian-day->date") (signature lambda ((real? jd)) date?))
 ((name . "modified-julian-day->date")
  (signature lambda ((real? jd) (integer? tz-offset)) date?)
  (tags pure))
 ((name . "modified-julian-day->time-monotonic")
  (signature lambda ((real? jd)) time?)
  (tags pure))
 ((name . "modified-julian-day->time-tai")
  (signature lambda ((real? jd)) time?)
  (tags pure))
 ((name . "modified-julian-day->time-utc")
  (signature lambda ((real? jd)) time?)
  (tags pure))
 ((name . "time-monotonic->date")
  (signature lambda ((time? time-monotonic)) date?))
 ((name . "time-monotonic->date")
  (signature lambda ((time? time-monotonic) (integer? tz-offset)) date?)
  (tags pure))
 ((name . "time-monotonic->julian-day")
  (signature lambda ((time? time-monotonic)) real?)
  (tags pure))
 ((name . "time-monotonic->modified-julian-day")
  (signature lambda ((time? time-monotonic)) real?)
  (tags pure))
 ((name . "time-monotonic->time-tai")
  (signature lambda ((time? time-monotonic)) time?)
  (tags pure))
 ((name . "time-monotonic->time-tai!")
  (signature lambda ((time? time-monotonic)) time?))
 ((name . "time-monotonic->time-utc")
  (signature lambda ((time? time-monotonic)) time?)
  (tags pure))
 ((name . "time-monotonic->time-utc!")
  (signature lambda ((time? time-monotonic)) time?))
 ((name . "time-tai->date") (signature lambda ((time? time-tai)) date?))
 ((name . "time-tai->date")
  (signature lambda ((time? time-tai) (integer? tz-offset)) date?)
  (tags pure))
 ((name . "time-tai->julian-day")
  (signature lambda ((time? time-tai)) real?)
  (tags pure))
 ((name . "time-tai->modified-julian-day")
  (signature lambda ((time? time-tai)) real?)
  (tags pure))
 ((name . "time-tai->time-monotonic")
  (signature lambda ((time? time-tai)) time?)
  (tags pure))
 ((name . "time-tai->time-monotonic!")
  (signature lambda ((time? time-tai)) time?))
 ((name . "time-tai->time-utc")
  (signature lambda ((time? time-tai)) time?)
  (tags pure))
 ((name . "time-tai->time-utc!") (signature lambda ((time? time-tai)) time?))
 ((name . "time-utc->date") (signature lambda ((time? time-utc)) date?))
 ((name . "time-utc->date")
  (signature lambda ((time? time-utc) (integer? tz-offset)) date?)
  (tags pure))
 ((name . "time-utc->julian-day")
  (signature lambda ((time? time-utc)) real?)
  (tags pure))
 ((name . "time-utc->modified-julian-day")
  (signature lambda ((time? time-utc)) real?)
  (tags pure))
 ((name . "time-utc->time-tai")
  (signature lambda ((time? time-utc)) time?)
  (tags pure))
 ((name . "time-utc->time-tai!") (signature lambda ((time? time-utc)) time?))
 ((name . "time-utc->time-tai")
  (signature lambda ((time? time-utc)) time?)
  (tags pure))
 ((name . "time-utc->time-tai!") (signature lambda ((time? time-utc)) time?))
 ((name . "date->string")
  (signature lambda ((date? date)) string?)
  (tags pure))
 ((name . "date->string")
  (signature lambda ((date? date) (string? format-string)) string?)
  (tags pure)
  (spec-values
   (format-string
    ("~~" "a literal ~")
    ("~a" "locale's abbreviated weekday name (Sun...Sat)")
    ("~A" "locale's full weekday name (Sunday...Saturday)")
    ("~b" "locale's abbreviate month name (Jan...Dec)")
    ("~B" "locale's full month day (January...December)")
    ("~c" "locale's date and time (e.g., \"Fri Jul 14 20:28:42-0400 2000\")")
    ("~d" "day of month, zero padded (01...31)")
    ("~D" "date (mm/dd/yy)")
    ("~e" "day of month, blank padded ( 1...31)")
    ("~f"
     "seconds+fractional seconds, using locale's decimal separator (e.g. 5.2).")
    ("~h" "same as ~b")
    ("~H" "hour, zero padded, 24-hour clock (00...23)")
    ("~I" "hour, zero padded, 12-hour clock (01...12)")
    ("~j" "day of year, zero padded")
    ("~k" "hour, blank padded, 24-hour clock ( 0...23)")
    ("~l" "hour, blank padded, 12-hour clock ( 1...12)")
    ("~m" "month, zero padded (01...12)")
    ("~M" "minute, zero padded (00...59)")
    ("~n" "new line")
    ("~N" "nanosecond, zero padded")
    ("~p" "locale's AM or PM")
    ("~r" "time, 12 hour clock, same as \"~I:~M:~S ~p\"")
    ("~s" "number of full seconds since \"the epoch\" (in UTC)")
    ("~S" "second, zero padded (00...60)")
    ("~t" "horizontal tab")
    ("~T" "time, 24 hour clock, same as \"~H:~M:~S\"")
    ("~U" "week number of year with Sunday as first day of week (00...53)")
    ("~V"
     "ISO 8601 week number of the year with Monday as first day of week (01..53)")
    ("~w" "day of week (0...6)")
    ("~W" "week number of year with Monday as first day of week (01...52)")
    ("~x" "locale's date representation")
    ("~X" "locale's time representation")
    ("~y" "last two digits of year (00...99)")
    ("~Y" "year")
    ("~z" "time zone in RFC-822 style")
    ("~Z" "symbol time zone (not-implemented)")
    ("~1" "ISO-8601 year-month-day format")
    ("~2" "ISO-8601 hour-minute-second-timezone format")
    ("~3" "ISO-8601 hour-minute-second format")
    ("~4" "ISO-8601 year-month-day-hour-minute-second-timezone format")
    ("~5" "ISO-8601 year-month-day-hour-minute-second format"))))
 ((name . "string->date")
  (signature lambda ((string? input-string) (string? template-string)) date?)
  (tags pure)
  (spec-values
   (template-string
    ("~~" "Skip to: any. Read: read literal ~. Set: nothing")
    ("~a"
     "Skip to: char-alphabetic?. Read: abbreviated weekday in locale. Set: nothing")
    ("~A"
     "Skip to: char-alphabetic?. Read: full weekday in locale. Set: nothing")
    ("~b"
     "Skip to: char-alphabetic?. Read: abbreviated month name in locale. Set: nothing")
    ("~B"
     "Skip to: char-alphabetic?. Read: full month name in locale. Set: nothing")
    ("~d" "Skip to: char-numeric?. Read: day of month. Set: date-day")
    ("~e" "Skip to: any. Read: day of month, blank padded. Set: date-day")
    ("~h" "Skip to: char-alphabetic?. Read: same as ~b. Set: nothing")
    ("~H" "Skip to: char-numeric?. Read: hour. Set: date-hour")
    ("~k" "Skip to: any. Read: hour, blank padded. Set: date-hour")
    ("~m" "Skip to: char-numeric?. Read: month. Set: date-month")
    ("~M" "Skip to: char-numeric?. Read: minute. Set: date-minute")
    ("~S" "Skip to: char-numeric?. Read: second. Set: date-second")
    ("~y" "Skip to: any. Read: 2-digit year. Set: date-year within 50 years")
    ("~Y" "Skip to: char-numeric?. Read: year. Set: date-year")
    ("~z" "Skip to: any. Read: time zone. Set: date-zone-offset")))))
