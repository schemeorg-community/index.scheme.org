(((name . "array?") (signature lambda (obj) boolean?) (tags pure predicate))
 ((name . "equal?") (signature lambda (obj1 obj2) boolean?) (tags pure))
 ((name . "make-array")
  (signature lambda ((array? prototype) (integer? k1) ...) array?)
  (tags pure))
 ((name . "ac64")
  (signature case-lambda (() array?) (((complex? z)) array?))
  (tags pure))
 ((name . "ac32")
  (signature case-lambda (() array?) (((complex? z)) array?))
  (tags pure))
 ((name . "ar64")
  (signature case-lambda (() array?) (((real? x)) array?))
  (tags pure))
 ((name . "ar32")
  (signature case-lambda (() array?) (((real? x)) array?))
  (tags pure))
 ((name . "as64")
  (signature case-lambda (() array?) (((integer? n)) array?))
  (tags pure))
 ((name . "as32")
  (signature case-lambda (() array?) (((integer? n)) array?))
  (tags pure))
 ((name . "as16")
  (signature case-lambda (() array?) (((integer? n)) array?))
  (tags pure))
 ((name . "as8")
  (signature case-lambda (() array?) (((integer? n)) array?))
  (tags pure))
 ((name . "au64")
  (signature case-lambda (() array?) (((integer? n)) array?))
  (tags pure))
 ((name . "au32")
  (signature case-lambda (() array?) (((integer? n)) array?))
  (tags pure))
 ((name . "au16")
  (signature case-lambda (() array?) (((integer? n)) array?))
  (tags pure))
 ((name . "au8")
  (signature case-lambda (() array?) (((integer? n)) array?))
  (tags pure))
 ((name . "at1")
  (signature case-lambda (() array?) (((boolean? b)) array?))
  (tags pure))
 ((name . "make-shared-array")
  (signature
   lambda
   ((array? array) (procedure? mapper) (integer? k1) ...)
   array?)
  (subsigs (mapper (lambda ((integer? i1) ...) list?)))
  (tags pure))
 ((name . "array-rank") (signature lambda (obj) integer?) (tags pure))
 ((name . "array-dimnesions")
  (signature lambda ((array? array)) list?)
  (tags pure))
 ((name . "array-in-bounds?")
  (signature lambda ((array? array) (integer? index1) ...) boolean?)
  (tags pure))
 ((name . "array-ref")
  (signature lambda ((array? array) (integer? index1) ...) *)
  (tags pure))
 ((name . "array-set!")
  (signature lambda ((array? array) obj (integer? index1) ...) undefined)))
