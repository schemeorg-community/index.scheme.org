(((name . "logand")
  (signature lambda ((integer? n1) ...) integer?)
  (tags pure))
 ((name . "bitwise-and")
  (signature lambda ((integer? n1) ...) integer?)
  (tags pure))
 ((name . "logior")
  (signature lambda ((integer? n1) ...) integer?)
  (tags pure))
 ((name . "bitwise-ior")
  (signature lambda ((integer? n1) ...) integer?)
  (tags pure))
 ((name . "logxor")
  (signature lambda ((integer? n1) ...) integer?)
  (tags pure))
 ((name . "bitwise-xor")
  (signature lambda ((integer? n1) ...) integer?)
  (tags pure))
 ((name . "lognot") (signature lambda ((integer? n)) integer?) (tags pure))
 ((name . "bitwise-not")
  (signature lambda ((integer? n)) integer?)
  (tags pure))
 ((name . "bitwise-if")
  (signature lambda ((integer? mask) (integer? n0) (integer? n1)) integer?)
  (tags pure))
 ((name . "bitwise-merge")
  (signature lambda ((integer? mask) (integer? n0) (integer? n1)) integer?)
  (tags pure))
 ((name . "logtest")
  (signature lambda ((integer? j) (integer? k)) boolean?)
  (tags pure))
 ((name . "any-bits-set?")
  (signature lambda ((integer? j) (integer? k)) boolean?)
  (tags pure))
 ((name . "logcount") (signature lambda ((integer? n)) integer?) (tags pure))
 ((name . "bit-count") (signature lambda ((integer? n)) integer?) (tags pure))
 ((name . "integer-length")
  (signature lambda ((integer? n)) integer?)
  (tags pure))
 ((name . "log2-binary-factors")
  (signature lambda ((integer? n)) integer?)
  (tags pure))
 ((name . "first-set-bit")
  (signature lambda ((integer? n)) integer?)
  (tags pure))
 ((name . "logbit?")
  (signature lambda ((integer? index) (integer? n)) boolean?)
  (tags pure))
 ((name . "bit-set?")
  (signature lambda ((integer? index) (integer? n)) boolean?)
  (tags pure))
 ((name . "copy-bit")
  (signature lambda ((integer? index) (integer? from) (boolean? bit)) integer?)
  (tags pure))
 ((name . "bit-field")
  (signature lambda ((integer? n) (integer? start) (integer? end)) integer?)
  (tags pure))
 ((name . "copy-bit-field")
  (signature
   lambda
   ((integer? to) (integer? from) (integer? start) (integer? end))
   integer?)
  (tags pure))
 ((name . "ash")
  (signature lambda ((integer? n) (integer? count)) integer?)
  (tags pure))
 ((name . "arithmetic-shift")
  (signature lambda ((integer? n) (integer? count)) integer?)
  (tags pure))
 ((name . "rotate-bit-field")
  (signature
   lambda
   ((integer? n) (integer? count) (integer? start) (integer? end))
   integer?)
  (tags pure))
 ((name . "reverse-bit-field")
  (signature lambda ((integer? n) (integer? start) (integer? end)) integer?)
  (tags pure))
 ((name . "integer->list") (signature lambda ((integer? k)) list?) (tags pure))
 ((name . "integer->list")
  (signature lambda ((integer? k) (integer? len)) list?)
  (tags pure))
 ((name . "list->integer")
  (signature lambda ((list? list)) integer?)
  (tags pure))
 ((name . "booleans->integer")
  (signature lambda ((boolean? bool1) ...) integer?)
  (tags pure)))
