(((name . "find")
  (signature lambda ((procedure? pred) (list? list)) *)
  (subsigs (pred (lambda (obj) *)))
  (tags pure))
 ((name . "for-all")
  (signature lambda ((procedure? pred) (list? list1) (list? list2) ...) *)
  (subsigs (pred (lambda (obj1 obj2 ...) *)))
  (tags pure))
 ((name . "exists")
  (signature lambda ((procedure? pred) (list? list1) (list? list2) ...) *)
  (subsigs (pred (lambda (obj1 obj2 ...) *)))
  (tags pure))
 ((name . "filter")
  (signature lambda ((procedure? pred) (list? list)) list?)
  (subsigs (pred (lambda (obj) *)))
  (tags pure))
 ((name . "partition")
  (signature lambda ((procedure? pred) (list? list)) (values list? list?))
  (subsigs (pred (lambda (obj) *)))
  (tags pure))
 ((name . "fold-left")
  (signature lambda ((procedure? kons) knil (list? list1) (list? list2) ...) *)
  (subsigs (kons (lambda (obj1 obj2 ... fold-state) *)))
  (tags pure))
 ((name . "fold-right")
  (signature lambda ((procedure? kons) knil (list? list1) (list? list2) ...) *)
  (subsigs (kons (lambda (obj1 obj2 ... fold-state) *)))
  (tags pure))
 ((name . "remp")
  (signature lambda ((procedure? pred) (list? list)) list?)
  (subsigs (pred (lambda (obj) *)))
  (tags pure))
 ((name . "remove") (signature lambda (obj (list? list)) list?) (tags pure))
 ((name . "remv") (signature lambda (obj (list? list)) list?) (tags pure))
 ((name . "remq") (signature lambda (obj (list? list)) list?) (tags pure))
 ((name . "memp")
  (signature lambda ((procedure? pred) (list? list)) (or #f list?))
  (subsigs (pred (lambda (obj) *)))
  (tags pure))
 ((name . "member")
  (signature lambda (obj (list? list)) (or #f list?))
  (tags pure))
 ((name . "memq")
  (signature lambda (obj (list? list)) (or #f list?))
  (tags pure))
 ((name . "memv")
  (signature lambda (obj (list? list)) (or #f list?))
  (tags pure))
 ((name . "assp")
  (signature lambda ((procedure? pred) (list? alist)) (or pair? #f))
  (subsigs (pred (lambda (obj) *)))
  (tags pure))
 ((name . "assoc")
  (signature lambda (obj (list? alist)) (or pair? #f))
  (tags pure))
 ((name . "assq")
  (signature lambda (obj (list? alist)) (or pair? #f))
  (tags pure))
 ((name . "assv")
  (signature lambda (obj (list? alist)) (or pair? #f))
  (tags pure))
 ((name . "cons*") (signature lambda (elt1 elt2 ...) *)))
