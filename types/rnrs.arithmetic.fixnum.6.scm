(((name . "fixnum?")
  (signature lambda (obj) boolean?)
  (tags pure predicate)
  (supertypes integer?))
 ((name . "fixnum-width") (signature value fixnum?))
 ((name . "least-fixnum") (signature value fixnum?))
 ((name . "greatest-fixnum") (signature value fixnum?))
 ((name . "fx=?") (signature lambda ((fixnum? i) ...) boolean?) (tags pure))
 ((name . "fx<?") (signature lambda ((fixnum? i) ...) boolean?) (tags pure))
 ((name . "fx>?") (signature lambda ((fixnum? i) ...) boolean?) (tags pure))
 ((name . "fx<=?") (signature lambda ((fixnum? i) ...) boolean?) (tags pure))
 ((name . "fx>=?") (signature lambda ((fixnum? i) ...) boolean?) (tags pure))
 ((name . "fxzero?") (signature lambda ((fixnum? i)) boolean?) (tags pure))
 ((name . "fxpositive?") (signature lambda ((fixnum? i)) boolean?) (tags pure))
 ((name . "fxnegative?") (signature lambda ((fixnum? i)) boolean?) (tags pure))
 ((name . "fxodd?") (signature lambda ((fixnum? i)) boolean?) (tags pure))
 ((name . "fxeven?") (signature lambda ((fixnum? i)) boolean?) (tags pure))
 ((name . "fxmax")
  (signature lambda ((fixnum? i) (fixnum? j) ...) fixnum?)
  (tags pure))
 ((name . "fxmin")
  (signature lambda ((fixnum? i) (fixnum? j) ...) fixnum?)
  (tags pure))
 ((name . "fx+")
  (signature lambda ((fixnum? i) (fixnum? j)) fixnum?)
  (tags pure))
 ((name . "fx*")
  (signature lambda ((fixnum? i) (fixnum? j)) fixnum?)
  (tags pure))
 ((name . "fx-")
  (signature lambda ((fixnum? i) (fixnum? j)) fixnum?)
  (tags pure))
 ((name . "fx-") (signature lambda ((fixnum? i)) fixnum?) (tags pure))
 ((name . "fxdiv")
  (signature lambda ((fixnum? x1) (fixnum? x2)) fixnum?)
  (tags pure))
 ((name . "fxdiv0")
  (signature lambda ((fixnum? x1) (fixnum? x2)) fixnum?)
  (tags pure))
 ((name . "fxdiv-and-mod")
  (signature lambda ((fixnum? x1) (fixnum? x2)) (values fixnum? fixnum?))
  (tags pure))
 ((name . "fxdiv0-and-mod0")
  (signature lambda ((fixnum? x1) (fixnum? x2)) (values fixnum? fixnum?))
  (tags pure))
 ((name . "fxmod")
  (signature lambda ((fixnum? x1) (fixnum? x2)) fixnum?)
  (tags pure))
 ((name . "fxmod0")
  (signature lambda ((fixnum? x1) (fixnum? x2)) fixnum?)
  (tags pure))
 ((name . "fx+/carry")
  (signature
   lambda
   ((fixnum? i) (fixnum? j) (fixnum? k))
   (values fixnum? fixnum?))
  (tags pure))
 ((name . "fx-/carry")
  (signature
   lambda
   ((fixnum? i) (fixnum? j) (fixnum? k))
   (values fixnum? fixnum?))
  (tags pure))
 ((name . "fx*/carry")
  (signature
   lambda
   ((fixnum? i) (fixnum? j) (fixnum? k))
   (values fixnum? fixnum?))
  (tags pure))
 ((name . "fxnot") (signature lambda ((fixnum? i)) fixnum?) (tags pure))
 ((name . "fxand") (signature lambda ((fixnum? i) ...) fixnum?) (tags pure))
 ((name . "fxior") (signature lambda ((fixnum? i) ...) fixnum?) (tags pure))
 ((name . "fxxor") (signature lambda ((fixnum? i) ...) fixnum?) (tags pure))
 ((name . "fxif")
  (signature lambda ((fixnum? mask) (fixnum? i) (fixnum? j)) fixnum?)
  (tags pure))
 ((name . "fxbit-count") (signature lambda ((fixnum? i)) fixnum?) (tags pure))
 ((name . "fxlength") (signature lambda ((fixnum? i)) fixnum?) (tags pure))
 ((name . "fxfirst-bit-set")
  (signature lambda ((fixnum? i)) fixnum?)
  (tags pure))
 ((name . "fxbit-set?")
  (signature lambda ((fixnum? i) (fixnum? index)) boolean?)
  (tags pure))
 ((name . "fxcopy-bit")
  (signature
   lambda
   ((fixnum? i) (fixnum? index) (fixnum? replacement))
   fixnum?)
  (tags pure))
 ((name . "fxbit-field")
  (signature lambda ((fixnum? i) (fixnum? start) (fixnum? end)) fixnum?)
  (tags pure))
 ((name . "fxcopy-bit-field")
  (signature
   lambda
   ((fixnum? i) (fixnum? start) (fixnum? end) (fixnum? replacement))
   fixnum?)
  (tags pure))
 ((name . "fxarithmetic-shift")
  (signature lambda ((fixnum? i) (fixnum? count)) fixnum?)
  (tags pure))
 ((name . "fxarithmetic-shift-left")
  (signature lambda ((fixnum? i) (fixnum? count)) fixnum?)
  (tags pure))
 ((name . "fxarithmetic-shift-right")
  (signature lambda ((fixnum? i) (fixnum? count)) fixnum?)
  (tags pure))
 ((name . "fxrotate-bit-field")
  (signature
   lambda
   ((fixnum? i) (fixnum? from) (fixnum? to) (fixnum? count))
   fixnum?)
  (tags pure))
 ((name . "fxreverse-bit-field")
  (signature lambda ((fixnum? i) (fixnum? start) (fixnum? end)) fixnum?)
  (tags pure)))
