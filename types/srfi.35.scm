(((name . "make-condition-type")
  (signature
   lambda
   ((symbol? id) (condition-type? parent) (list? field-names))
   condition-type?)
  (tags pure))
 ((name . "condition-type?")
  (signature lambda (obj) boolean?)
  (tags pure predicate))
 ((name . "make-condition")
  (signature
   lambda
   ((condition-type? type) (symbol? field-name1) value1 ...)
   condition?)
  (tags pure))
 ((name . "condition?")
  (signature lambda (obj) boolean?)
  (tags pure predicate))
 ((name . "condition-has-type?")
  (signature lambda ((condition? condition) (condition-type? type)) boolean?)
  (tags pure))
 ((name . "condition-ref")
  (signature lambda ((condition? condition) (symbol? field-name)) *)
  (tags pure))
 ((name . "make-compound-condition")
  (signature
   lambda
   ((condition? condition1) (condition? condition2) ...)
   condition?)
  (tags pure))
 ((name . "extract-condition")
  (signature lambda ((condition? condition) (condition-type? type)) condition?)
  (tags pure))
 ((name . "define-condition-type")
  (signature
   syntax-rules
   ()
   ((_ condition-type supertype predicate field-spec ...)))
  (subsigs
   (field-spec (pattern (field accessor)))
   (supertype (value condition-type?))))
 ((name . "condition")
  (signature syntax-rules () ((_ type-field-binding ...) condition?))
  (subsigs
   (type-field-binding (pattern (condition-type field-binding)))
   (field-binding (pattern (field exp)))
   (condition-type (value condition-type?))))
 ((name . "&condition") (signature value condition-type?))
 ((name . "&message") (signature value condition-type?))
 ((name . "message-condition?")
  (signature lambda (obj) boolean?)
  (tags pure predicate)
  (supertypes condition?))
 ((name . "condition-message")
  (signature lambda ((message-condition? condition)) *)
  (tags pure))
 ((name . "&serious") (signature value condition-type?))
 ((name . "serious-condition?")
  (signature lambda (obj) boolean?)
  (tags pure predicate)
  (supertypes condition?))
 ((name . "&error") (signature value condition-type?))
 ((name . "error?")
  (signature lambda (obj) boolean?)
  (tags pure predicate)
  (supertypes condition?)))
